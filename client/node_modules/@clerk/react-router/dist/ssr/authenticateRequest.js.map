{"version":3,"sources":["../../src/ssr/authenticateRequest.ts"],"sourcesContent":["import { createClerkClient } from '@clerk/backend';\nimport type { AuthenticateRequestOptions, SignedInState, SignedOutState } from '@clerk/backend/internal';\nimport { AuthStatus } from '@clerk/backend/internal';\n\nimport type { LoaderFunctionArgs } from './types';\nimport { patchRequest } from './utils';\n\nexport async function authenticateRequest(\n  args: LoaderFunctionArgs,\n  opts: AuthenticateRequestOptions,\n): Promise<SignedInState | SignedOutState> {\n  const { request } = args;\n  const { audience, authorizedParties } = opts;\n\n  const { apiUrl, secretKey, jwtKey, proxyUrl, isSatellite, domain, publishableKey } = opts;\n  const { signInUrl, signUpUrl, afterSignInUrl, afterSignUpUrl } = opts;\n\n  const requestState = await createClerkClient({\n    apiUrl,\n    secretKey,\n    jwtKey,\n    proxyUrl,\n    isSatellite,\n    domain,\n    publishableKey,\n    userAgent: `${PACKAGE_NAME}@${PACKAGE_VERSION}`,\n  }).authenticateRequest(patchRequest(request), {\n    audience,\n    authorizedParties,\n    signInUrl,\n    signUpUrl,\n    afterSignInUrl,\n    afterSignUpUrl,\n  });\n\n  const hasLocationHeader = requestState.headers.get('location');\n  if (hasLocationHeader) {\n    // triggering a handshake redirect\n    throw new Response(null, { status: 307, headers: requestState.headers });\n  }\n\n  if (requestState.status === AuthStatus.Handshake) {\n    throw new Error('Clerk: unexpected handshake without redirect');\n  }\n\n  return requestState;\n}\n"],"mappings":";AAAA,SAAS,yBAAyB;AAElC,SAAS,kBAAkB;AAG3B,SAAS,oBAAoB;AAE7B,eAAsB,oBACpB,MACA,MACyC;AACzC,QAAM,EAAE,QAAQ,IAAI;AACpB,QAAM,EAAE,UAAU,kBAAkB,IAAI;AAExC,QAAM,EAAE,QAAQ,WAAW,QAAQ,UAAU,aAAa,QAAQ,eAAe,IAAI;AACrF,QAAM,EAAE,WAAW,WAAW,gBAAgB,eAAe,IAAI;AAEjE,QAAM,eAAe,MAAM,kBAAkB;AAAA,IAC3C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,GAAG,qBAAY,IAAI,OAAe;AAAA,EAC/C,CAAC,EAAE,oBAAoB,aAAa,OAAO,GAAG;AAAA,IAC5C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,oBAAoB,aAAa,QAAQ,IAAI,UAAU;AAC7D,MAAI,mBAAmB;AAErB,UAAM,IAAI,SAAS,MAAM,EAAE,QAAQ,KAAK,SAAS,aAAa,QAAQ,CAAC;AAAA,EACzE;AAEA,MAAI,aAAa,WAAW,WAAW,WAAW;AAChD,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAChE;AAEA,SAAO;AACT;","names":[]}