// src/utils/env.ts
import { isTruthy } from "@clerk/shared/underscore";
var import_meta = {};
var hasCloudflareProxyContext = (context) => {
  var _a;
  return !!((_a = context == null ? void 0 : context.cloudflare) == null ? void 0 : _a.env);
};
var hasCloudflareContext = (context) => {
  return !!(context == null ? void 0 : context.env);
};
var getEnvVariable = (name, context) => {
  if (typeof process !== "undefined" && process.env && typeof process.env[name] === "string") {
    return process.env[name];
  }
  if (typeof import_meta !== "undefined" && import_meta.env && typeof import_meta.env[name] === "string") {
    return import_meta.env[name];
  }
  if (hasCloudflareProxyContext(context)) {
    return context.cloudflare.env[name] || "";
  }
  if (hasCloudflareContext(context)) {
    return context.env[name] || "";
  }
  if (context && typeof context[name] === "string") {
    return context[name];
  }
  try {
    return globalThis[name];
  } catch (_) {
  }
  return "";
};
var getPublicEnvVariables = (context) => {
  return {
    publishableKey: getEnvVariable("VITE_CLERK_PUBLISHABLE_KEY", context) || getEnvVariable("CLERK_PUBLISHABLE_KEY", context),
    domain: getEnvVariable("VITE_CLERK_DOMAIN", context) || getEnvVariable("CLERK_DOMAIN", context),
    isSatellite: isTruthy(getEnvVariable("VITE_CLERK_IS_SATELLITE", context)) || isTruthy(getEnvVariable("CLERK_IS_SATELLITE", context)),
    proxyUrl: getEnvVariable("VITE_CLERK_PROXY_URL", context) || getEnvVariable("CLERK_PROXY_URL", context),
    signInUrl: getEnvVariable("VITE_CLERK_SIGN_IN_URL", context) || getEnvVariable("CLERK_SIGN_IN_URL", context),
    signUpUrl: getEnvVariable("VITE_CLERK_SIGN_UP_URL", context) || getEnvVariable("CLERK_SIGN_UP_URL", context),
    clerkJsUrl: getEnvVariable("VITE_CLERK_JS_URL", context) || getEnvVariable("CLERK_JS", context),
    clerkJsVariant: getEnvVariable("VITE_CLERK_JS_VARIANT", context) || getEnvVariable("CLERK_JS_VARIANT", context),
    clerkJsVersion: getEnvVariable("VITE_CLERK_JS_VERSION", context) || getEnvVariable("CLERK_JS_VERSION", context),
    telemetryDisabled: isTruthy(getEnvVariable("VITE_CLERK_TELEMETRY_DISABLED", context)) || isTruthy(getEnvVariable("CLERK_TELEMETRY_DISABLED", context)),
    telemetryDebug: isTruthy(getEnvVariable("VITE_CLERK_TELEMETRY_DEBUG", context)) || isTruthy(getEnvVariable("CLERK_TELEMETRY_DEBUG", context)),
    signInForceRedirectUrl: getEnvVariable("VITE_CLERK_SIGN_IN_FORCE_REDIRECT_URL", context) || getEnvVariable("CLERK_SIGN_IN_FORCE_REDIRECT_URL", context),
    signUpForceRedirectUrl: getEnvVariable("VITE_CLERK_SIGN_UP_FORCE_REDIRECT_URL", context) || getEnvVariable("CLERK_SIGN_UP_FORCE_REDIRECT_URL", context),
    signInFallbackRedirectUrl: getEnvVariable("VITE_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL", context) || getEnvVariable("CLERK_SIGN_IN_FALLBACK_REDIRECT_URL", context),
    signUpFallbackRedirectUrl: getEnvVariable("VITE_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL", context) || getEnvVariable("CLERK_SIGN_UP_FALLBACK_REDIRECT_URL", context),
    afterSignInUrl: getEnvVariable("VITE_CLERK_AFTER_SIGN_IN_URL", context) || getEnvVariable("CLERK_AFTER_SIGN_IN_URL", context),
    afterSignUpUrl: getEnvVariable("VITE_CLERK_AFTER_SIGN_UP_URL", context) || getEnvVariable("CLERK_AFTER_SIGN_UP_URL", context)
  };
};
export {
  getEnvVariable,
  getPublicEnvVariables
};
//# sourceMappingURL=env.js.map